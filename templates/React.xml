<templateSet group="React">
  <template name="sst" value="const [$StateName$, set$SetStateName$] = useState($END$)" description="Creates a useState" toReformat="false" toShortenFQNames="true">
    <variable name="StateName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="SetStateName" expression="capitalize(StateName" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rc" value="import React from 'react'&#10;import PropTypes from 'prop-types'&#10;&#10;const useStyles = makeStyles(theme =&gt; ({&#10;}))&#10;&#10;export default function $FILENAME$ (props) {&#10;    const classes = useStyles()&#10;&#10;    return render(&#10;        $END$&#10;    )&#10;}&#10;&#10;$FILENAME$.propTypes = {&#10;}&#10;" description="Creates a React component class with PropTypes" toReformat="false" toShortenFQNames="true">
    <variable name="FILENAME" expression="capitalize(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rtc" value="import React from 'react'&#10;&#10;import { makeStyles } from '@material-ui/core/styles'&#10;&#10;const useStyles = makeStyles(theme =&gt; ({&#10;}))&#10;&#10;interface IProps {&#10;}&#10;&#10;export default function $FILENAME$ ({}: IProps) {&#10;    const classes = useStyles()&#10;&#10;    return (&#10;        $END$&#10;    )&#10;}&#10;" description="Creates a TypeScript React component with IProps" toReformat="false" toShortenFQNames="true">
    <variable name="FILENAME" expression="capitalize(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>